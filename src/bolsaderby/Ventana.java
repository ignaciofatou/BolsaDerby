/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bolsaderby;

import bolsaderby.data.Categoria;
import bolsaderby.data.Categorias;
import bolsaderby.data.Valor;
import bolsaderby.data.Valores;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Ignacio
 */
public class Ventana extends javax.swing.JFrame {

    // Connection with database using an entity manager
    EntityManager entityManager = Persistence.createEntityManagerFactory("BolsaDerbyPU").createEntityManager();
    Categorias    categorias = new Categorias();
    Valores       valores    = new Valores();
    
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        
        //Ponemos el Layout (Dise√±o) a Nulo
        this.setLayout(null);
        
        //Centramos la ventana
        setLocationRelativeTo(null);
        
        //Cargamos las Categorias en el ComboBox
        cargaCategorias();
    }

    private void cargaCategorias(){
        List<Categoria> categoriaList = categorias.findAll(entityManager);

        //Reiniciamos el Combo si ya tiene algun contenido
        if (jCBCategorias.getItemCount() != 0)
            reiniciaCombo(jCBCategorias);
        
        //Cargamos el ComboBox a Partir de las Descripciones de las Categorias
        for (Categoria categoria:categoriaList){
            jCBCategorias.addItem(categoria.getDescripcion());
        }
        //Marcamos por defecto el Primero Item como Seleccionado
        jCBCategorias.setSelectedIndex(0);
    }
    
    private void cargaValores(){
        List<Valor> valorList = valores.findAll(entityManager);
        
        //Reiniciamos el Combo si ya tiene algun contenido
        if (jCBValores.getItemCount() != 0)
            reiniciaCombo(jCBValores);
        
        //Cargamos el ComboBox a Partir de las Descripciones de las Categorias
        for (Valor valor:valorList){
            jCBValores.addItem(valor.getDescripcion());
        }
        //Marcamos por defecto el Primero Item como Seleccionado
        jCBValores.setSelectedIndex(0);
    }
    
    private void reiniciaCombo(javax.swing.JComboBox combo){
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        combo.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCBCategorias = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jCBValores = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Categoria:");

        jCBCategorias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCategoriasItemStateChanged(evt);
            }
        });

        jLabel2.setText("Valores:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBValores, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCBCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jCBValores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(354, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //Cerramos la Conexion
        entityManager.close();
    }//GEN-LAST:event_formWindowClosing

    private void jCBCategoriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCategoriasItemStateChanged
        //Una vez Desmarcado el Valor Seleccionado
        if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED){
            //Cargamos los Valores Asociados a la Categoria Seleccionada
            cargaValores();
        }
    }//GEN-LAST:event_jCBCategoriasItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jCBCategorias;
    private javax.swing.JComboBox jCBValores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
